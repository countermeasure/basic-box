#!/bin/bash

# Set intuitive error behaviour.
set -o errexit -o nounset -o pipefail

INSTALLER_DIR='/media/cdrom/simple-cdd'
LOCAL_DIR='/usr/local/simple-cdd'

USERNAME=$(ls /home)
USER_DIR="/home/$USERNAME"
USER_BIN_DIR="$USER_DIR/.local/bin"
USER_CONFIG_DIR="$USER_DIR/.config"
AUTOSTART_DIR="$USER_CONFIG_DIR/autostart"

git_global_config_set () {
    # Add a setting to the Git global configuration. It's necessary to wrap the
    # second argument in double quotes to set the configuration values
    # correctly.
    runuser --login "$USERNAME" --command "git config --global $1 \"$2\""
}
gsettings_set () {
    # Change a dconf setting. It's necessary to use dbus-launch ahead of
    # gsettings when invoking this as the root user.
    runuser \
        --login "$USERNAME" \
        --command "dbus-launch gsettings set org.gnome.$1"
}

# Copy extra files onto the new installation.
cp $INSTALLER_DIR/bat_0.19.0_amd64.deb $LOCAL_DIR
cp $INSTALLER_DIR/box.sh $LOCAL_DIR
cp $INSTALLER_DIR/delta-0.11.3-source.tar.gz $LOCAL_DIR
cp $INSTALLER_DIR/delta-0.11.3-x86_64-unknown-linux-gnu.tar.gz $LOCAL_DIR
cp $INSTALLER_DIR/direnv-v2.30.3-source.tar.gz $LOCAL_DIR
cp $INSTALLER_DIR/direnv.linux-amd64 $LOCAL_DIR
cp $INSTALLER_DIR/dot_bashrc_aliases $LOCAL_DIR
cp $INSTALLER_DIR/dot_bashrc_functions $LOCAL_DIR
cp $INSTALLER_DIR/dot_bashrc_modifications $LOCAL_DIR
cp $INSTALLER_DIR/dot_profile_modifications $LOCAL_DIR
cp $INSTALLER_DIR/exa-linux-x86_64-v0.10.1.zip $LOCAL_DIR
cp $INSTALLER_DIR/fd_8.3.2_amd64.deb $LOCAL_DIR
cp $INSTALLER_DIR/Fira_Code_Regular_Nerd_Font_Complete.otf $LOCAL_DIR
cp $INSTALLER_DIR/first_boot.service $LOCAL_DIR
cp $INSTALLER_DIR/first_boot.sh $LOCAL_DIR
cp $INSTALLER_DIR/first_login.desktop $LOCAL_DIR
cp $INSTALLER_DIR/first_login.sh $LOCAL_DIR
cp $INSTALLER_DIR/fzf-0.29.0-linux_amd64.tar.gz $LOCAL_DIR
cp $INSTALLER_DIR/fzf-0.29.0-source.tar.gz $LOCAL_DIR
cp $INSTALLER_DIR/gitk $LOCAL_DIR
cp $INSTALLER_DIR/htoprc $LOCAL_DIR
cp $INSTALLER_DIR/httpie-completion.bash $LOCAL_DIR
cp $INSTALLER_DIR/keyd-v1.3.0-source.tar.gz $LOCAL_DIR
cp $INSTALLER_DIR/keyd_default.cfg $LOCAL_DIR
cp $INSTALLER_DIR/MullvadVPN-2021.6_amd64.deb $LOCAL_DIR
cp $INSTALLER_DIR/ripgrep_13.0.0_amd64.deb $LOCAL_DIR
cp $INSTALLER_DIR/starship-x86_64-unknown-linux-gnu.tar.gz $LOCAL_DIR
cp $INSTALLER_DIR/starship.toml $LOCAL_DIR
cp $INSTALLER_DIR/zoxide-v0.8.0-x86_64-unknown-linux-musl.tar.gz $LOCAL_DIR

# Copy first_boot systemd unit file into place.
cp $LOCAL_DIR/first_boot.service /etc/systemd/system

# Enable the first_boot systemd service. This performs configuration tasks
# which can't be done in this postinst script, and is then removed.
systemctl enable first_boot.service

# Install the UFW firewall.
apt install ufw

# Install the Mullvad VPN app.
apt install gdebi-core
gdebi --non-interactive $LOCAL_DIR/MullvadVPN-2021.6_amd64.deb

# Set up a desktop entry to run the first_login script at login. This performs
# configuration tasks which require user interaction, and is then removed.
runuser \
    --login \
    "$USERNAME" \
    --command \
    "desktop-file-install --dir=$AUTOSTART_DIR $LOCAL_DIR/first_login.desktop"

# Install Tor Browser Launcher.
apt install --yes torbrowser-launcher

# Install pipx.
apt install --yes python3-pip python3-venv
runuser -l "$USERNAME" -c 'pip3 install pipx'

# Copy .bashrc extensions into place and enable them.
cp $LOCAL_DIR/dot_bashrc_aliases "$USER_DIR"/.bashrc_aliases
cp $LOCAL_DIR/dot_bashrc_functions "$USER_DIR"/.bashrc_functions
cp $LOCAL_DIR/dot_bashrc_modifications "$USER_DIR"/.bashrc_modifications
chown "$USERNAME":"$USERNAME" "$USER_DIR"/.bashrc_*
chmod 644 "$USER_DIR"/.bashrc_*
printf '\n# Enable .bashrc extensions.\n' >> "$USER_DIR"/.bashrc
# shellcheck disable=SC2016
echo 'for file in ~/.bashrc_*; do . "$file"; done' >> "$USER_DIR"/.bashrc

# Copy .profile extension into place and enable it.
cp $LOCAL_DIR/dot_profile_modifications "$USER_DIR"/.profile_modifications
chown "$USERNAME":"$USERNAME" "$USER_DIR"/.profile_modifications
chmod 644 "$USER_DIR"/.profile_modifications
printf '\n# Enable .profile modifications.\n' >> "$USER_DIR"/.profile
# shellcheck disable=SC2016
echo '. "$HOME/.profile_modifications"' >> "$USER_DIR"/.profile

# Install youtube-dl.
runuser -l "$USERNAME" -c 'pipx install youtube-dl==2021.12.17'
apt install --yes ffmpeg

# Install ranger.
apt install --yes ranger

# Set dark theme globally.
gsettings_set 'desktop.interface gtk-theme "Adwaita-dark"'

# Display date and battery percentage in top bar.
gsettings_set 'desktop.interface clock-show-weekday true'
gsettings_set 'desktop.interface show-battery-percentage true'

# Never blank screen, dim screen or suspend when inactive.
gsettings_set 'desktop.session idle-delay 0'
gsettings_set 'settings-daemon.plugins.power idle-dim false'
gsettings_set 'settings-daemon.plugins.power sleep-inactive-ac-type "nothing"'

# Make display colour warmer at night.
gsettings_set 'settings-daemon.plugins.color night-light-enabled true'

# Enable natural scrolling for mouse.
gsettings_set 'desktop.peripherals.mouse natural-scroll true'

# Speed up trackpad and enable trackpad tap-to-click.
gsettings_set 'desktop.peripherals.touchpad speed 0.25'
gsettings_set 'desktop.peripherals.touchpad tap-to-click true'

# Enable automatic login.
sed -i \
    's/.*AutomaticLoginEnable =.*/AutomaticLoginEnable = true/' \
    /etc/gdm3/daemon.conf
sed -i \
    "s/.*AutomaticLogin =.*/AutomaticLogin = $USERNAME/" \
    /etc/gdm3/daemon.conf

# Install fd.
dpkg -i $LOCAL_DIR/fd_8.3.2_amd64.deb

# Install ripgrep.
dpkg -i $LOCAL_DIR/ripgrep_13.0.0_amd64.deb

# Install exa.
unzip -d /tmp/exa_0.10.1 $LOCAL_DIR/exa-linux-x86_64-v0.10.1.zip
cp /tmp/exa_0.10.1/bin/exa /usr/local/bin
cp \
    /tmp/exa_0.10.1/completions/exa.bash \
    /usr/share/bash-completion/completions
mkdir /usr/local/share/man/man1
cp /tmp/exa_0.10.1/man/exa.1 /usr/local/share/man/man1
mkdir /usr/local/share/man/man5
cp /tmp/exa_0.10.1/man/exa_colors.5 /usr/local/share/man/man5
mandb

# Install bat.
dpkg -i $LOCAL_DIR/bat_0.19.0_amd64.deb

# Install fzf.
tar --extract -f $LOCAL_DIR/fzf-0.29.0-linux_amd64.tar.gz --directory /tmp
tar --extract -f $LOCAL_DIR/fzf-0.29.0-source.tar.gz --directory /tmp
cp /tmp/fzf /usr/local/bin
cp /tmp/fzf-0.29.0/man/man1/fzf.1 /usr/local/share/man/man1
mkdir /usr/local/share/fzf
cp /tmp/fzf-0.29.0/shell/completion.bash /usr/local/share/fzf
cp /tmp/fzf-0.29.0/shell/key-bindings.bash /usr/local/share/fzf
mandb

# Install zoxide.
mkdir /tmp/zoxide-v0.8.0
tar \
    --extract -f $LOCAL_DIR/zoxide-v0.8.0-x86_64-unknown-linux-musl.tar.gz \
    --directory /tmp/zoxide-v0.8.0
cp /tmp/zoxide-v0.8.0/zoxide /usr/local/bin
cp /tmp/zoxide-v0.8.0/man/zoxide.1 /usr/local/share/man/man1
cp \
    /tmp/zoxide-v0.8.0/completions/zoxide.bash \
    /usr/share/bash-completion/completions
mandb

# Install htop.
apt install --yes htop
HTOP_DIR="$USER_CONFIG_DIR/htop"
mkdir "$HTOP_DIR"
cp $LOCAL_DIR/htoprc "$HTOP_DIR"
chown --recursive "$USERNAME":"$USERNAME" "$HTOP_DIR"
chmod 644 "$HTOP_DIR"/htoprc

# Make the F10 key available in the GNOME Terminal by stopping it from opening
# the GNOME Terminal menu's File item. Without doing this, changes made
# interactively to htop's settings can't be applied.
gsettings_set 'Terminal.Legacy.Settings menu-accelerator-enabled false'

# Install ncdu.
apt install --yes ncdu

# Install delta.
tar \
    --extract -f $LOCAL_DIR/delta-0.11.3-x86_64-unknown-linux-gnu.tar.gz \
    --directory /tmp
tar --extract -f $LOCAL_DIR/delta-0.11.3-source.tar.gz --directory /tmp
cp /tmp/delta-0.11.3-x86_64-unknown-linux-gnu/delta /usr/local/bin
cp \
    /tmp/delta-0.11.3/etc/completion/completion.bash \
    /usr/share/bash-completion/completions/delta.bash

# Install Git
apt install --yes git
# Add Git global config settings for user identity. These are placeholders
# which the user should change.
git_global_config_set 'user.name' 'Basic'
git_global_config_set 'user.email' 'basic@basic.box'
# Add Git global config setting for "git branch" sorting.
git_global_config_set 'branch.sort' '-committerdate'
# Add Git global config settings for "git log" formatting.
git_global_config_set 'log.date' 'format:%b %d %Y'
git_global_config_set \
    'format.pretty' \
    '%C(auto)%h %C(dim white)%ad%C(auto)%d%Creset %s %C(dim white)by %an %ar'
# Add Git global config setting for "git pull" behaviour.
git_global_config_set 'pull.rebase' 'true'
# Add Git global config settings recommended by delta.
git_global_config_set 'core.pager' 'delta'
git_global_config_set 'delta.navigate' 'true'
git_global_config_set 'diff.colorMoved' 'default'
git_global_config_set 'interactive.diffFilter' 'delta --color-only'
git_global_config_set 'merge.conflictstyle' 'diff3'
# Add Git global config settings for line numbers for delta.
git_global_config_set 'delta.line-numbers' 'true'

# Install gitk
apt install --yes gitk
GIT_DIR="$USER_CONFIG_DIR/git"
mkdir "$GIT_DIR"
cp $LOCAL_DIR/gitk "$GIT_DIR"
chown --recursive "$USERNAME":"$USERNAME" "$GIT_DIR"
chmod 644 "$GIT_DIR"/gitk

# Install and configure keyd.
apt install --yes libudev-dev
tar --extract -f $LOCAL_DIR/keyd-v1.3.0-source.tar.gz --directory /tmp
make --directory=/tmp/keyd-1.3.0
make --directory=/tmp/keyd-1.3.0 install
# keyd requires configuration files to be available in /etc/keyd, but prefer to
# keep them within the user's home directory.
KEYD_DIR="$USER_CONFIG_DIR/keyd"
mkdir "$KEYD_DIR"
rmdir /etc/keyd
ln --symbolic "$KEYD_DIR" /etc/keyd
cp $LOCAL_DIR/keyd_default.cfg "$KEYD_DIR/default.cfg"
chown --recursive "$USERNAME":"$USERNAME" "$KEYD_DIR"
chmod 644 "$KEYD_DIR"/default.cfg

# Make the "box" command available everywhere.
BOX_SCRIPT_PATH="$USER_BIN_DIR/box"
cp $LOCAL_DIR/box.sh "$BOX_SCRIPT_PATH"
chown "$USERNAME":"$USERNAME" "$BOX_SCRIPT_PATH"
chmod 755 "$BOX_SCRIPT_PATH"

# Install direnv.
DIRENV_EXECUTABLE_PATH='/usr/local/bin/direnv'
cp $LOCAL_DIR/direnv.linux-amd64 $DIRENV_EXECUTABLE_PATH
chmod 755 $DIRENV_EXECUTABLE_PATH
tar --extract -f $LOCAL_DIR/direnv-v2.30.3-source.tar.gz --directory /tmp
cp /tmp/direnv-2.30.3/man/direnv-fetchurl.1 /usr/local/share/man/man1
cp /tmp/direnv-2.30.3/man/direnv-stdlib.1 /usr/local/share/man/man1
cp /tmp/direnv-2.30.3/man/direnv.1 /usr/local/share/man/man1
cp /tmp/direnv-2.30.3/man/direnv.toml.1 /usr/local/share/man/man1
mandb

# Install Fira Code Nerd Font.
FONTS_DIR='/usr/local/share/fonts'
cp $LOCAL_DIR/Fira_Code_Regular_Nerd_Font_Complete.otf $FONTS_DIR
chmod 664 $FONTS_DIR/Fira_Code_Regular_Nerd_Font_Complete.otf
# Make Fira Code the system-wide monospace font.
gsettings_set 'desktop.interface monospace-font-name "FiraCode Nerd Font 11"'

# Install Starship.
tar \
    --extract -f $LOCAL_DIR/starship-x86_64-unknown-linux-gnu.tar.gz \
    --directory /usr/local/bin
# The Starship binary is called with its full path here as calling it just with
# starship doesn't work.
/usr/local/bin/starship completions bash > \
    /usr/share/bash-completion/completions/starship.bash
cp $LOCAL_DIR/starship.toml "$USER_CONFIG_DIR"
chown "$USERNAME":"$USERNAME" "$USER_CONFIG_DIR"/starship.toml
chmod 664 "$USER_CONFIG_DIR"/starship.toml

# Install HTTPie.
runuser -l "$USERNAME" -c 'pipx install httpie==3.1.0'
USER_SHARE_DIR="$USER_DIR/.local/share"
USER_COMPLETION_DIR="$USER_SHARE_DIR/bash-completion/completions"
mkdir -p "$USER_COMPLETION_DIR"
# The completion file needs to be named with of the commands which it relates
# to to work, so rather than naming it httpie.bash, it is named https.bash.
cp $LOCAL_DIR/httpie-completion.bash "$USER_COMPLETION_DIR"/http.bash
ln --symbolic \
    "$USER_COMPLETION_DIR"/http.bash \
    "$USER_COMPLETION_DIR"/https.bash
chown --recursive "$USERNAME":"$USERNAME" "$USER_SHARE_DIR"
chmod 644 "$USER_COMPLETION_DIR"/http.bash

# Install Nmap.
apt install --yes nmap
