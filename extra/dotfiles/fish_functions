# vim: filetype=fish

###############################################################################
#
#  Change to a parent directory.
#
#  Arguments:
#    Int (optional). The number of parent directories to climb by. Values can
#    be 1 to 99 inclusive.
#
###############################################################################
function go_to_parent_directory
    if test -z $argv[1]
        cd ..
    else if not contains $argv[1] (seq 1 99)
        echo 'Argument must be an integer between 1 and 99'
        return 1
    else
        set path ''
        for i in (seq $argv[1])
            set path ../$path
        end
        cd $path
    end
end

###############################################################################
#
#  Allow pip to run if inside a virtualenv. If not inside a virtualenv, show a
#  message to prefer pipx.
#
#  Arguments:
#    Strings. The arguments to pass to the pip executable.
#
###############################################################################
function only_allow_pip_in_virtualenvs
    if test -n "$VIRTUAL_ENV"
        command pip $argv
    else
        echo 'Prefer pipx to pip when not in a virtualenv'
        return 1
    end
end

###############################################################################
#
#  Allow pip3 to run if inside a virtualenv. If not inside a virtualenv, show a
#  message to prefer pipx.
#
#  Arguments:
#    Strings. The arguments to pass to the pip3 executable.
#
###############################################################################
function only_allow_pip3_in_virtualenvs
    if test -n "$VIRTUAL_ENV"
        command pip3 $argv
    else
        echo 'Prefer pipx to pip3 when not in a virtualenv'
        return 1
    end
end

###############################################################################
#
#  Show a message saying that one command is preferred to another, but run the
#  less preferred command anyway.
#
#  For use in aliases.
#
#  Arguments:
#    Strings. The more preferred command, then the less preferred command.
#
###############################################################################
function prefer
    # If the alias is not being passed to a pipe, show the prefer message.
    if test -t 1
        set ansi_clear '\033[0m'
        set ansi_yellow '\033[1;33m'
        echo
        echo -e "$ansi_yellowðŸ’¡ Prefer $argv[1] to $argv[2]$ansi_clear"
        echo
    end
    command $argv[2..-1]
end

###############################################################################
#
#  Show a message saying that one command should be used instead of another,
#  and don't run the less preferred command.
#
#  For use in aliases.
#
#  Arguments:
#    Strings. The more preferred command, then the less preferred command.
#
###############################################################################
function protect
    set ansi_clear '\033[0m'
    set ansi_yellow '\033[1;33m'
    echo
    echo -e "$ansi_yellowâœ‹ Use $argv[1] instead of $argv[2]$ansi_clear"
    return 1
end

###############################################################################
#
#  Set the window title to the truncated current working directory.
#
###############################################################################
function set_window_title
    set condensed_pwd (pwd | sed "s|^$HOME|~|")
    set separators_in_condensed_pwd \
        (string match --all --regex '/' $condensed_pwd)
    set non_home_directory_count (count $separators_in_condensed_pwd)
    set non_home_directories_to_show 2
    if test $non_home_directory_count -gt $non_home_directories_to_show
        set base_title (
            echo $condensed_pwd \
                | rev \
                | cut -d / -f -$non_home_directories_to_show \
                | rev
        )
        set window_title â€¦/$base_title
    else
        set window_title $condensed_pwd
    end
    echo "ðŸ“‚  $window_title"
end
